class Sound

	constructor: (@file) ->

		window.AudioContext = window.AudioContext or window.webkitAudioContext

		@audio_ctx = new window.AudioContext()

	load: ( @callback ) ->

		@req = new XMLHttpRequest()
		@req.open 'GET', @file, true
		@req.responseType = 'arraybuffer'

		@req.onload = => @_setup()

		@req.send()

		return off

	_setup : =>

		@audio_ctx.decodeAudioData @req.response, (@buff) =>
			
			log 'loaded', @buff

			@source = @audio_ctx.createBufferSource()

			@source.buffer = @buff

			@source.connect @audio_ctx.destination

			# Add event listeners

			@callback()
	
		, -> log 'error'

		return off

	play: ->

		log @source

		# @source.start 0 

	on_playback: ( @callback_playback ) =>



class IndexView



	constructor: ->

		@timeline = {
			'0': {
				'icosahedron' : ['in']
			}
			'10': {
				'dodecahedron' :['in']
			}
			'20': {
				'hexahedron' :['in']
			}
			'30': {
				'octahedron' :['in']
			}
			'40': {
				'tetrahedron' :['in']
			}
		}

		# Setup timeline for geometry / in / out



		# Setup audio

		# Attach listeners to audio

		@sound = new Sound('/sound/therall_toge.mp3')

		@sounds.on_playback @_on_playback

		@sound.load @_on_sound_ready

		

	_on_sound_ready: =>

		log 'sound loaded'

		@sound.play()


	_on_playback: =>

		log 'x'






$ -> new IndexView()